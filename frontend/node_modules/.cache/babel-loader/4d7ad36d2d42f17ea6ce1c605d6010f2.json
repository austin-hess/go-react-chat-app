{"ast":null,"code":"var socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n\nlet connect = cb => {\n  console.log(\"Attempting Connection...\");\n\n  socket.onopen = () => {\n    console.log(\"Successfully connected!\");\n  };\n\n  socket.onmessage = msg => {\n    console.log(msg);\n    cb(msg);\n  };\n\n  socket.onclose = event => {\n    console.log(\"Socket closed connection \", event);\n  };\n\n  socket.onerror = err => {\n    console.log(\"Socket error: \", err);\n  };\n};\n\nlet sendMsg = msg => {\n  console.log(\"Sending msg: \", msg);\n  socket.send(msg);\n};\n\nexport { connect, sendMsg };","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/api/index.js"],"names":["socket","WebSocket","roomId","connect","cb","console","log","onopen","onmessage","msg","onclose","event","onerror","err","sendMsg","send"],"mappings":"AAAA,IAAIA,MAAM,GAAG,IAAIC,SAAJ,CAAe,0BAAyBC,MAAO,EAA/C,CAAb;;AAEA,IAAIC,OAAO,GAAIC,EAAD,IAAQ;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEAN,EAAAA,MAAM,CAACO,MAAP,GAAgB,MAAM;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,GAFD;;AAIAN,EAAAA,MAAM,CAACQ,SAAP,GAAoBC,GAAD,IAAS;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAL,IAAAA,EAAE,CAACK,GAAD,CAAF;AACH,GAHD;;AAKAT,EAAAA,MAAM,CAACU,OAAP,GAAkBC,KAAD,IAAW;AACxBN,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,KAAzC;AACH,GAFD;;AAIAX,EAAAA,MAAM,CAACY,OAAP,GAAkBC,GAAD,IAAS;AACtBR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,GAA9B;AACH,GAFD;AAGH,CAnBD;;AAqBA,IAAIC,OAAO,GAAIL,GAAD,IAAS;AACnBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,GAA7B;AACAT,EAAAA,MAAM,CAACe,IAAP,CAAYN,GAAZ;AACH,CAHD;;AAKA,SAASN,OAAT,EAAkBW,OAAlB","sourcesContent":["var socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n\nlet connect = (cb) => {\n    console.log(\"Attempting Connection...\");\n\n    socket.onopen = () => {\n        console.log(\"Successfully connected!\");\n    };\n\n    socket.onmessage = (msg) => {\n        console.log(msg);\n        cb(msg);\n    };\n\n    socket.onclose = (event) => {\n        console.log(\"Socket closed connection \", event);\n    };\n\n    socket.onerror = (err) => {\n        console.log(\"Socket error: \", err);\n    };\n};\n\nlet sendMsg = (msg) => {\n    console.log(\"Sending msg: \", msg);\n    socket.send(msg);\n};\n\nexport { connect, sendMsg };"]},"metadata":{},"sourceType":"module"}