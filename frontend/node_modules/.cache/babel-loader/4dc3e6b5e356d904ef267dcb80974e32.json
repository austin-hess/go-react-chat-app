{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/austinhess/Development/projects/go-react/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport Header from './components/Header';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput';\nimport ChatRoomConnection from './api/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.send = event => {\n      if (event.keyCode === 13) {\n        this.chatRoomConnection.sendMessage(event.target.value);\n        event.target.value = \"\";\n      }\n    };\n\n    this.state = {\n      activeChatRooms: []\n    };\n  }\n\n  componentDidMount() {\n    this.chatRoomConnection = new ChatRoomConnection(this.state.nextRoomId, msg => {\n      console.log(\"New Message\");\n      this.setState(prevState => ({\n        chatHistory: [...prevState.chatHistory, msg],\n        nextRoomId: prevState.nextRoomId + 1\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatHistory, {\n        chatHistory: this.state.chatHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        send: this.send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/App.js"],"names":["React","Component","Header","ChatHistory","ChatInput","ChatRoomConnection","App","constructor","props","send","event","keyCode","chatRoomConnection","sendMessage","target","value","state","activeChatRooms","componentDidMount","nextRoomId","msg","console","log","setState","prevState","chatHistory","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,kBAAP,MAA+B,aAA/B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,IAjBmB,GAiBXC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKC,kBAAL,CAAwBC,WAAxB,CAAoCH,KAAK,CAACI,MAAN,CAAaC,KAAjD;AACAL,QAAAA,KAAK,CAACI,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,KAtBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,kBAAL,GAA0B,IAAIP,kBAAJ,CAAuB,KAAKW,KAAL,CAAWG,UAAlC,EAA+CC,GAAD,IAAS;AAC/EC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,WAAW,EAAE,CAAC,GAAGD,SAAS,CAACC,WAAd,EAA2BL,GAA3B,CADa;AAE1BD,QAAAA,UAAU,EAAEK,SAAS,CAACL,UAAV,GAAuB;AAFT,OAAL,CAAvB;AAID,KANyB,CAA1B;AAOD;;AASDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWS;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKhB;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAjCyB;;AAoC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\n\nimport Header from './components/Header';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput'\nimport ChatRoomConnection from './api/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChatRooms: []\n    };\n  }\n\n  componentDidMount() {\n    this.chatRoomConnection = new ChatRoomConnection(this.state.nextRoomId, (msg) => {\n      console.log(\"New Message\");\n      this.setState(prevState => ({\n        chatHistory: [...prevState.chatHistory, msg],\n        nextRoomId: prevState.nextRoomId + 1\n      }))\n    });\n  }\n\n  send = (event) => {\n    if (event.keyCode === 13) {\n      this.chatRoomConnection.sendMessage(event.target.value);\n      event.target.value = \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <ChatHistory chatHistory={this.state.chatHistory}/>\n        <ChatInput send={this.send} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}