{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/austinhess/Development/projects/go-react/frontend/src/components/ChatApp/ChatApp.jsx\";\nimport React, { Component } from 'react';\nimport './ChatApp.scss'; // import components\n\nimport ChatroomList from '../ChatroomList';\nimport ChatWindow from '../ChatWindow'; // import backend services\n\nimport ChatroomAPI from '../../api/ChatroomAPI';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    ChatroomAPI.getAvailableChatrooms().then(response => {\n      this.setState({\n        availableChatrooms: response.roomIds\n      });\n    });\n  }\n\n  handleRoomSelection(event) {\n    this.setState({\n      activeChatWindow: event.target.value\n    });\n  }\n\n  render() {\n    const activeChatWindow = this.state.activeChatWindow ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n      roomId: this.state.activeChatWindow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 64\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    console.log(this.state.availableChatrooms);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatApp\",\n      children: [/*#__PURE__*/_jsxDEV(ChatroomList, {\n        handleRoomSelect: this.handleRoomSelect,\n        chatrooms: this.state.availableChatrooms ? this.state.availableChatrooms : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), activeChatWindow]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/components/ChatApp/ChatApp.jsx"],"names":["React","Component","ChatroomList","ChatWindow","ChatroomAPI","ChatApp","constructor","props","state","componentDidMount","getAvailableChatrooms","then","response","setState","availableChatrooms","roomIds","handleRoomSelection","event","activeChatWindow","target","value","render","console","log","handleRoomSelect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,WAAW,CAACM,qBAAZ,GAAoCC,IAApC,CAAyCC,QAAQ,IAAI;AACjD,WAAKC,QAAL,CAAc;AACVC,QAAAA,kBAAkB,EAAEF,QAAQ,CAACG;AADnB,OAAd;AAGH,KAJD;AAKH;;AAEDC,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvB,SAAKJ,QAAL,CAAc;AACVK,MAAAA,gBAAgB,EAAED,KAAK,CAACE,MAAN,CAAaC;AADrB,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMH,gBAAgB,GAAG,KAAKV,KAAL,CAAWU,gBAAX,gBAA8B,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWU;AAA/B;AAAA;AAAA;AAAA;AAAA,YAA9B,gBAAoF,qCAA7G;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWM,kBAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,YAAD;AACI,QAAA,gBAAgB,EAAE,KAAKU,gBAD3B;AAEI,QAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWM,kBAAX,GAAgC,KAAKN,KAAL,CAAWM,kBAA3C,GAAgE;AAF/E;AAAA;AAAA;AAAA;AAAA,cADJ,EAKKI,gBALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAhC2B;;AAmChC,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport './ChatApp.scss';\n\n// import components\nimport ChatroomList from '../ChatroomList';\nimport ChatWindow from '../ChatWindow';\n\n// import backend services\nimport ChatroomAPI from '../../api/ChatroomAPI';\n\nclass ChatApp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        ChatroomAPI.getAvailableChatrooms().then(response => {\n            this.setState({\n                availableChatrooms: response.roomIds\n            });\n        });\n    }\n\n    handleRoomSelection(event) {\n        this.setState({\n            activeChatWindow: event.target.value\n        });\n    }\n\n    render() {\n        const activeChatWindow = this.state.activeChatWindow ? <ChatWindow roomId={this.state.activeChatWindow} /> : <></>;\n        console.log(this.state.availableChatrooms);\n        return (\n            <div className=\"ChatApp\">\n                <ChatroomList \n                    handleRoomSelect={this.handleRoomSelect}\n                    chatrooms={this.state.availableChatrooms ? this.state.availableChatrooms : []} \n                />\n                {activeChatWindow}\n            </div>\n        )\n    }\n}\n\nexport default ChatApp;"]},"metadata":{},"sourceType":"module"}