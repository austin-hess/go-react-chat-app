{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/austinhess/Development/projects/go-react/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport Header from './components/Header';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput';\nimport ChatroomConnection from './api/ChatroomConnection';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connectToRoom = () => {\n      this.chatRoomConnection = new ChatroomConnection(this.state.nextRoomId, msg => {\n        console.log(\"New Message\");\n        this.setState(prevState => ({\n          chatHistory: [...prevState.chatHistory, msg],\n          nextRoomId: prevState.nextRoomId + 1\n        }));\n      });\n    };\n\n    this.createNewChatroom = () => {\n      this._createChatroom().then(data => {\n        console.log(data);\n        this.setState(prevState => {\n          activeChatRooms: [...prevState.activeChatRooms, data];\n        });\n      });\n    };\n\n    this.send = event => {\n      if (event.keyCode === 13) {\n        this.chatRoomConnection.sendMessage(event.target.value);\n        event.target.value = \"\";\n      }\n    };\n\n    this.state = {\n      activeChatRooms: [],\n      availableChatrooms: []\n    };\n  }\n\n  componentDidMount() {\n    this._getAvailableChatRooms().then(data => {\n      console.log(data);\n      this.setState(prevState => {\n        availableChatrooms = data.roomIds;\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/App.js"],"names":["React","Component","Header","ChatHistory","ChatInput","ChatroomConnection","App","constructor","props","connectToRoom","chatRoomConnection","state","nextRoomId","msg","console","log","setState","prevState","chatHistory","createNewChatroom","_createChatroom","then","data","activeChatRooms","send","event","keyCode","sendMessage","target","value","availableChatrooms","componentDidMount","_getAvailableChatRooms","roomIds","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,aAjBmB,GAiBH,MAAM;AACpB,WAAKC,kBAAL,GAA0B,IAAIL,kBAAJ,CAAuB,KAAKM,KAAL,CAAWC,UAAlC,EAA+CC,GAAD,IAAS;AAC/EC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,UAAAA,WAAW,EAAE,CAAC,GAAGD,SAAS,CAACC,WAAd,EAA2BL,GAA3B,CADa;AAE1BD,UAAAA,UAAU,EAAEK,SAAS,CAACL,UAAV,GAAuB;AAFT,SAAL,CAAvB;AAID,OANyB,CAA1B;AAOD,KAzBkB;;AAAA,SA2BnBO,iBA3BmB,GA2BC,MAAM;AACxB,WAAKC,eAAL,GAAuBC,IAAvB,CAA4BC,IAAI,IAAI;AAClCR,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,aAAKN,QAAL,CAAcC,SAAS,IAAI;AACzBM,UAAAA,eAAe,EAAE,CAAC,GAAGN,SAAS,CAACM,eAAd,EAA+BD,IAA/B;AAClB,SAFD;AAGD,OALD;AAMD,KAlCkB;;AAAA,SAsCnBE,IAtCmB,GAsCXC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKhB,kBAAL,CAAwBiB,WAAxB,CAAoCF,KAAK,CAACG,MAAN,CAAaC,KAAjD;AACAJ,QAAAA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,KA3CkB;;AAEjB,SAAKlB,KAAL,GAAa;AACXY,MAAAA,eAAe,EAAE,EADN;AAEXO,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,sBAAL,GAA8BX,IAA9B,CAAmCC,IAAI,IAAI;AACzCR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,WAAKN,QAAL,CAAcC,SAAS,IAAI;AACzBa,QAAAA,kBAAkB,GAAGR,IAAI,CAACW,OAA1B;AACD,OAFD;AAGD,KALD;AAMD;;AA8BDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AArDyB;;AAwD5B,eAAe5B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\n\nimport Header from './components/Header';\nimport ChatHistory from './components/ChatHistory';\nimport ChatInput from './components/ChatInput'\nimport ChatroomConnection from './api/ChatroomConnection';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeChatRooms: [],\n      availableChatrooms: []\n    };\n  }\n\n  componentDidMount() {\n    this._getAvailableChatRooms().then(data => {\n      console.log(data);\n      this.setState(prevState => {\n        availableChatrooms = data.roomIds;\n      });\n    });\n  }\n  \n  connectToRoom = () => {\n    this.chatRoomConnection = new ChatroomConnection(this.state.nextRoomId, (msg) => {\n      console.log(\"New Message\");\n      this.setState(prevState => ({\n        chatHistory: [...prevState.chatHistory, msg],\n        nextRoomId: prevState.nextRoomId + 1\n      }))\n    });\n  }\n\n  createNewChatroom = () => {\n    this._createChatroom().then(data => {\n      console.log(data);\n      this.setState(prevState => {\n        activeChatRooms: [...prevState.activeChatRooms, data]\n      });\n    });\n  }\n\n  \n\n  send = (event) => {\n    if (event.keyCode === 13) {\n      this.chatRoomConnection.sendMessage(event.target.value);\n      event.target.value = \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <ChatApp />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}