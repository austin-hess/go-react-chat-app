{"ast":null,"code":"class ChatroomConnection {\n  constructor(roomId) {\n    this.setMessageHandler = this.setMessageHandler.bind(this);\n    this.socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n    console.log(\"Attempting Connection...\");\n\n    this.socket.onopen = () => {\n      console.log(\"Successfully connected!\");\n    };\n\n    this.socket.onmessage = msg => {\n      console.log(msg);\n\n      if (this.messageHandler) {\n        this.messageHandler(msg);\n      }\n    };\n\n    this.socket.onclose = event => {\n      console.log(\"Socket closed connection \", event);\n    };\n\n    this.socket.onerror = err => {\n      console.log(\"Socket error: \", err);\n    };\n  }\n\n  setMessageHandler(handler) {\n    this.messageHandler = handler;\n  }\n\n  sendMessage(msg) {\n    console.log(`Sending message: ${msg}`);\n    this.socket.send(msg);\n  }\n\n  end() {\n    // Normal closure\n    this.socket.close(1000);\n  }\n\n}\n\nexport default ChatroomConnection;","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/api/ChatroomConnection/ChatroomConnection.js"],"names":["ChatroomConnection","constructor","roomId","setMessageHandler","bind","socket","WebSocket","console","log","onopen","onmessage","msg","messageHandler","onclose","event","onerror","err","handler","sendMessage","send","end","close"],"mappings":"AAAA,MAAMA,kBAAN,CAAyB;AACrBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,MAAL,GAAc,IAAIC,SAAJ,CAAe,0BAAyBJ,MAAO,EAA/C,CAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,SAAKH,MAAL,CAAYI,MAAZ,GAAqB,MAAM;AACvBF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KAFD;;AAGA,SAAKH,MAAL,CAAYK,SAAZ,GAAyBC,GAAD,IAAS;AAC7BJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;;AACA,UAAI,KAAKC,cAAT,EAAyB;AACrB,aAAKA,cAAL,CAAoBD,GAApB;AACH;AACJ,KALD;;AAMA,SAAKN,MAAL,CAAYQ,OAAZ,GAAuBC,KAAD,IAAW;AAC7BP,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCM,KAAzC;AACH,KAFD;;AAGA,SAAKT,MAAL,CAAYU,OAAZ,GAAuBC,GAAD,IAAS;AAC3BT,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,GAA9B;AACH,KAFD;AAGH;;AAEDb,EAAAA,iBAAiB,CAACc,OAAD,EAAU;AACvB,SAAKL,cAAL,GAAsBK,OAAtB;AACH;;AAEDC,EAAAA,WAAW,CAACP,GAAD,EAAM;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBG,GAAI,EAApC;AACA,SAAKN,MAAL,CAAYc,IAAZ,CAAiBR,GAAjB;AACH;;AAEDS,EAAAA,GAAG,GAAG;AACF;AACA,SAAKf,MAAL,CAAYgB,KAAZ,CAAkB,IAAlB;AACH;;AAlCoB;;AAqCzB,eAAerB,kBAAf","sourcesContent":["class ChatroomConnection {\n    constructor(roomId) {\n        this.setMessageHandler = this.setMessageHandler.bind(this);\n        this.socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n        console.log(\"Attempting Connection...\");\n        this.socket.onopen = () => {\n            console.log(\"Successfully connected!\");\n        };\n        this.socket.onmessage = (msg) => {\n            console.log(msg);\n            if (this.messageHandler) {\n                this.messageHandler(msg);\n            }\n        };\n        this.socket.onclose = (event) => {\n            console.log(\"Socket closed connection \", event);\n        };\n        this.socket.onerror = (err) => {\n            console.log(\"Socket error: \", err);\n        };\n    }\n\n    setMessageHandler(handler) {\n        this.messageHandler = handler;\n    }\n\n    sendMessage(msg) {\n        console.log(`Sending message: ${msg}`);\n        this.socket.send(msg);\n    }\n\n    end() {\n        // Normal closure\n        this.socket.close(1000);\n    }\n}\n\nexport default ChatroomConnection;"]},"metadata":{},"sourceType":"module"}