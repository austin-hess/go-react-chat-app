{"ast":null,"code":"class ChatRoomConnection {\n  constructor(roomId, messageHandler) {\n    socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n    console.log(\"Attempting Connection...\");\n\n    socket.onopen = () => {\n      console.log(\"Successfully connected!\");\n    };\n\n    socket.onmessage = msg => {\n      console.log(msg);\n      messageHandler(msg);\n    };\n\n    socket.onclose = event => {\n      console.log(\"Socket closed connection \", event);\n    };\n\n    socket.onerror = err => {\n      console.log(\"Socket error: \", err);\n    };\n  }\n\n  sendMessage(msg) {\n    console.log(`Sending message: ${msg}`);\n    socket.send(msg);\n  }\n\n}\n\nvar socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n\nlet connect = cb => {\n  console.log(\"Attempting Connection...\");\n\n  socket.onopen = () => {\n    console.log(\"Successfully connected!\");\n  };\n\n  socket.onmessage = msg => {\n    console.log(msg);\n    cb(msg);\n  };\n\n  socket.onclose = event => {\n    console.log(\"Socket closed connection \", event);\n  };\n\n  socket.onerror = err => {\n    console.log(\"Socket error: \", err);\n  };\n};\n\nlet sendMsg = msg => {\n  console.log(\"Sending msg: \", msg);\n  socket.send(msg);\n};\n\nexport { connect, sendMsg };","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/api/index.js"],"names":["ChatRoomConnection","constructor","roomId","messageHandler","socket","WebSocket","console","log","onopen","onmessage","msg","onclose","event","onerror","err","sendMessage","send","connect","cb","sendMsg"],"mappings":"AAAA,MAAMA,kBAAN,CAAyB;AACrBC,EAAAA,WAAW,CAACC,MAAD,EAASC,cAAT,EAAyB;AAChCC,IAAAA,MAAM,GAAG,IAAIC,SAAJ,CAAe,0BAAyBH,MAAO,EAA/C,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KAFD;;AAGAH,IAAAA,MAAM,CAACK,SAAP,GAAoBC,GAAD,IAAS;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAP,MAAAA,cAAc,CAACO,GAAD,CAAd;AACH,KAHD;;AAIAN,IAAAA,MAAM,CAACO,OAAP,GAAkBC,KAAD,IAAW;AACxBN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,KAAzC;AACH,KAFD;;AAGAR,IAAAA,MAAM,CAACS,OAAP,GAAkBC,GAAD,IAAS;AACtBR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,GAA9B;AACH,KAFD;AAGH;;AAEDC,EAAAA,WAAW,CAACL,GAAD,EAAM;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBG,GAAI,EAApC;AACAN,IAAAA,MAAM,CAACY,IAAP,CAAYN,GAAZ;AACH;;AAtBoB;;AAwBzB,IAAIN,MAAM,GAAG,IAAIC,SAAJ,CAAe,0BAAyBH,MAAO,EAA/C,CAAb;;AAEA,IAAIe,OAAO,GAAIC,EAAD,IAAQ;AAClBZ,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEAH,EAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,GAFD;;AAIAH,EAAAA,MAAM,CAACK,SAAP,GAAoBC,GAAD,IAAS;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAQ,IAAAA,EAAE,CAACR,GAAD,CAAF;AACH,GAHD;;AAKAN,EAAAA,MAAM,CAACO,OAAP,GAAkBC,KAAD,IAAW;AACxBN,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,KAAzC;AACH,GAFD;;AAIAR,EAAAA,MAAM,CAACS,OAAP,GAAkBC,GAAD,IAAS;AACtBR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,GAA9B;AACH,GAFD;AAGH,CAnBD;;AAqBA,IAAIK,OAAO,GAAIT,GAAD,IAAS;AACnBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,GAA7B;AACAN,EAAAA,MAAM,CAACY,IAAP,CAAYN,GAAZ;AACH,CAHD;;AAKA,SAASO,OAAT,EAAkBE,OAAlB","sourcesContent":["class ChatRoomConnection {\n    constructor(roomId, messageHandler) {\n        socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n        console.log(\"Attempting Connection...\");\n        socket.onopen = () => {\n            console.log(\"Successfully connected!\");\n        };\n        socket.onmessage = (msg) => {\n            console.log(msg);\n            messageHandler(msg);\n        };\n        socket.onclose = (event) => {\n            console.log(\"Socket closed connection \", event);\n        };\n        socket.onerror = (err) => {\n            console.log(\"Socket error: \", err);\n        };\n    }\n\n    sendMessage(msg) {\n        console.log(`Sending message: ${msg}`);\n        socket.send(msg);\n    }\n}\nvar socket = new WebSocket(`ws://localhost:8080/ws/${roomId}`);\n\nlet connect = (cb) => {\n    console.log(\"Attempting Connection...\");\n\n    socket.onopen = () => {\n        console.log(\"Successfully connected!\");\n    };\n\n    socket.onmessage = (msg) => {\n        console.log(msg);\n        cb(msg);\n    };\n\n    socket.onclose = (event) => {\n        console.log(\"Socket closed connection \", event);\n    };\n\n    socket.onerror = (err) => {\n        console.log(\"Socket error: \", err);\n    };\n};\n\nlet sendMsg = (msg) => {\n    console.log(\"Sending msg: \", msg);\n    socket.send(msg);\n};\n\nexport { connect, sendMsg };"]},"metadata":{},"sourceType":"module"}