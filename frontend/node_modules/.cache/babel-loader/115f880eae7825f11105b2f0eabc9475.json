{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/austinhess/Development/projects/go-react/frontend/src/components/ChatApp/ChatApp.jsx\";\nimport React, { Component } from 'react';\nimport './ChatApp.scss'; // import components\n\nimport ChatroomList from '../ChatroomList';\nimport ChatWindow from '../ChatWindow'; // import backend services\n\nimport ChatroomAPI from '../../api/ChatroomAPI';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      const activeChatWindow = this.state.activeChatWindow ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n        roomId: this.state.activeChatWindow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 64\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatApp\",\n        children: [/*#__PURE__*/_jsxDEV(ChatroomList, {\n          chatrooms: this.state.availableChatrooms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), activeChatWindow]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.render = this.render.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      availableChatrooms: ChatroomAPI.getAvailableChatrooms()\n    });\n  }\n\n  handleRoomSelection(val) {\n    this.setState({\n      activeChatWindow: val\n    });\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["/Users/austinhess/Development/projects/go-react/frontend/src/components/ChatApp/ChatApp.jsx"],"names":["React","Component","ChatroomList","ChatWindow","ChatroomAPI","ChatApp","constructor","props","render","activeChatWindow","state","availableChatrooms","bind","componentDidMount","setState","getAvailableChatrooms","handleRoomSelection","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,MAjBmB,GAiBV,MAAM;AACX,YAAMC,gBAAgB,GAAG,KAAKC,KAAL,CAAWD,gBAAX,gBAA8B,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD;AAA/B;AAAA;AAAA;AAAA;AAAA,cAA9B,gBAAoF,qCAA7G;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKF,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAzBkB;;AAEf,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYI,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVH,MAAAA,kBAAkB,EAAEP,WAAW,CAACW,qBAAZ;AADV,KAAd;AAGH;;AAEDC,EAAAA,mBAAmB,CAACC,GAAD,EAAM;AACrB,SAAKH,QAAL,CAAc;AACVL,MAAAA,gBAAgB,EAAEQ;AADR,KAAd;AAGH;;AAhB2B;;AA6BhC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport './ChatApp.scss';\n\n// import components\nimport ChatroomList from '../ChatroomList';\nimport ChatWindow from '../ChatWindow';\n\n// import backend services\nimport ChatroomAPI from '../../api/ChatroomAPI';\n\nclass ChatApp extends Component {\n    constructor(props) {\n        super(props);\n        this.render = this.render.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            availableChatrooms: ChatroomAPI.getAvailableChatrooms()\n        });\n    }\n\n    handleRoomSelection(val) {\n        this.setState({\n            activeChatWindow: val\n        });\n    }\n\n    render = () => {\n        const activeChatWindow = this.state.activeChatWindow ? <ChatWindow roomId={this.state.activeChatWindow} /> : <></>;\n        return (\n            <div className=\"ChatApp\">\n                <ChatroomList chatrooms={this.state.availableChatrooms} />\n                {activeChatWindow}\n            </div>\n        )\n    }\n}\n\nexport default ChatApp;"]},"metadata":{},"sourceType":"module"}